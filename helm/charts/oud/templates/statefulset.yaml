apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-oud
  labels:
    app: oud
    release: {{ .Release.Name }}
spec:
  serviceName: {{ .Release.Name }}-oud-headless
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: oud
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: oud
        release: {{ .Release.Name }}
    spec:
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
      - name: oud
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: ldap
          containerPort: {{ .Values.oud.ldapPort }}
        - name: ldaps
          containerPort: {{ .Values.oud.ldapsPort }}
        - name: admin
          containerPort: {{ .Values.oud.adminPort }}
        - name: replication
          containerPort: {{ .Values.oud.replicationPort }}
        env:
        - name: OUD_INSTANCE_NAME
          value: {{ .Values.oud.instanceName }}
        - name: OUD_LDAP_PORT
          value: "{{ .Values.oud.ldapPort }}"
        - name: OUD_LDAPS_PORT
          value: "{{ .Values.oud.ldapsPort }}"
        - name: OUD_ADMIN_PORT
          value: "{{ .Values.oud.adminPort }}"
        - name: OUD_REPLICATION_PORT
          value: "{{ .Values.oud.replicationPort }}"
        - name: OUD_BASE_DN
          value: {{ .Values.oud.baseDN }}
        - name: OUD_ROOT_USER_DN
          value: {{ .Values.oud.rootUserDN }}
        - name: OUD_ROOT_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.oud.rootUserPasswordSecretName }}
              key: {{ .Values.oud.rootUserPasswordSecretKey }}
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        - name: data
          mountPath: /u01/oracle/user_projects/domains/base_domain/config/fmwconfig/components/OUD/instances/{{ .Values.oud.instanceName }}
        {{- if .Values.nfs.enabled }}
        - name: shared
          mountPath: {{ .Values.nfs.mountPath }}
        {{- end }}
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - ldapls -h localhost -p {{ .Values.oud.ldapPort }} -D {{ .Values.oud.rootUserDN }} -w ${OUD_ROOT_USER_PASSWORD} -b "" -s base "objectclass=*"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - ldapls -h localhost -p {{ .Values.oud.ldapPort }} -D {{ .Values.oud.rootUserDN }} -w ${OUD_ROOT_USER_PASSWORD} -b "" -s base "objectclass=*"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.nfs.enabled }}
      - name: shared
        nfs:
          server: {{ .Values.nfs.server }}
          path: {{ .Values.nfs.path }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ {{ .Values.persistence.accessMode | quote }} ]
      storageClassName: {{ .Values.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}